import{_ as e,o as t,c as i,S as o}from"./chunks/framework.f15d8f8c.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/other/one.md","filePath":"guide/other/one.md"}'),a={name:"guide/other/one.md"},r=o('<h2 id="react-性能优化" tabindex="-1">react 性能优化 <a class="header-anchor" href="#react-性能优化" aria-label="Permalink to &quot;react 性能优化&quot;">​</a></h2><ol><li>react 内置的 suspense 和 lazy 做路由懒加载</li><li>pureComponent，子组件不依赖父组件的数据，父组件重新渲染不会导致子组件重新渲染</li></ol><h2 id="工程化" tabindex="-1">工程化 <a class="header-anchor" href="#工程化" aria-label="Permalink to &quot;工程化&quot;">​</a></h2><ol><li>使用 vite 搭建 vue3 项目 --- npm create vite@latest</li><li>安装<code>eslint、prettier</code>检查代码规范和格式化代码 --- npm init @eslint/config，创建.prettierrc 文件，npm i prettier -D，在 package.json 文件中写下&quot;prettier&quot;: &quot;prettier --write .&quot;，执行<code>npm run prettier</code>即可格式化所有文件的代码</li><li>自动导入 vue 模块组件和本地模块组件 --- npm install -D unplugin-vue-components unplugin-auto-import，然后在 vite 中进行相应的配置</li><li>配置@作为根路径，需要同时配置<code>vite.config.ts和tsconfig.json</code>文件</li><li>全局样式变量和 icon 图标 --- npm install vite-plugin-svg-icons -D，安装全局配置 icon 和 svg 图标并且封装 svgIcon 组件方便复用，可以使用<code>--variable</code>的方式定义 css 变量，然后使用<code>var(--variable)</code>使用 css 变量。这里使用 less 变量方便工程化，另外使用<code>reset-css</code>库初始化 css 样式。</li><li>安装 axios 并进行二次封装，对于接口请求函数和类型规定应该分为两个 ts 文件写，全局配置 API 接受到的结果</li><li>安装 mock，在 src 下新建 mock 文件夹配置对应接口的 mock 数据，注意：mock 拦截中的请求是区分大小写的！！本来我写了一个&#39;GET&#39;,半天找不出来错误，后来发现应该是拦截&#39;get&#39;，而不是&#39;GET&#39;</li><li>安装 router 和 pinia 做路由管理和状态缓存，路由需要使用懒加载做优化，另外集成 ant-design-vue</li><li>创建 utils 文件夹，封装 storage 工具函数</li></ol>',4),n=[r];function c(s,l,d,p,u,_){return t(),i("div",null,n)}const g=e(a,[["render",c]]);export{h as __pageData,g as default};
